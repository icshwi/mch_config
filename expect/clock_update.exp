#!/usr/bin/expect --
#
#  Copyright (c) 2019           European Spallation Source ERIC
#
#  The program is free software: you can redistribute
#  it and/or modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation, either version 2 of the
#  License, or any newer version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#  more details.
#
#  You should have received a copy of the GNU General Public License along with
#  this program. If not, see https://www.gnu.org/licenses/gpl-2.0.txt
#
#   author  : Jeong Han Lee
#   email   : jeonghan.lee@gmail.com
#   author  : Felipe Torres GonzÃ¡lez
#   email   : torresfelipex1@gmail.com
#   date    : Friday, November  20 12:52:00 CET 2020
#   version : 0.0.4

# Let's centralize general options into a file :-)
set script_path [ file dirname [ file normalize [ info script ] ] ]
source $script_path/expect.config

set prompt "nat> ";
set mchcfgprompt "Enter configuration mode (RET=\*): ";
set debugprompt "Enter debug state (RET=\*): "
set debugcmds {
    csif_dbg
    imsg_dbg
    lshm_dbg
    red_dbg
    rmcp_dbg
    sdrrep_dbg
    sel_dbg
}
# MCH is slow not to understand the machine send command
# So, we have to put some delay between characters.
#
# Send strings with .1 second in between each 1 characters sent
#
set send_slow {1 .1}

#
# MOXA Server IP
#
set ip [lindex $argv 0]
#
# MOXA Server PORT
#
set port [lindex $argv 1]
#
# Date to append to the log file
#
set DATE [lindex $argv 2]
#
# Selection of the source file
#
set clkcfg [lindex $argv 3]


if { [string trimleft $port] == "" } {
    set port "23"
    puts ">> It looks like one does not use the MOXA"
    puts ">> We are going to use the telent default one : $port"
}


set conf_path_filename "latest_mch_conf_${clkcfg}_cfg.txt"

puts "Source file set as : $conf_path_filename"

file mkdir $G_EXPECT_CFG_LOGFILEPATH
log_file $G_EXPECT_CFG_LOGFILEPATH/MCH_CLOCKUPDATE_CONF_$ip\_$port\_$DATE.log

proc dialog {expstring send } {
    expect {
	$expstring {
	    sleep .1;
	    exp_send -s -- "$send\r"
	    sleep 1;
	}
	-re "Enter configuration mode (RET=\*): " {
	    exp_send -s -- "0\rq\r"
	}
	-re "Enter debug state (RET=\*): " {
	    exp_send -s -- "0x0\r"
	}
	-gl "timeout" {
	    expect *
	    error "Timed out" \
		"Expected: $expstring. Saw: $expect_out(buffer)"
	}
	eof {
	    expect *
	    error "Connection Closed" \
		"Expected: $expstring. Saw: $expect_out(buffer)"
	}
    }
}


exp_spawn telnet "$ip" "$port"

dialog "Escape character is '^\]'.\r" ""

expect  {
    "$prompt"       { exp_send -s "\r" }
    "$mchcfgprompt" { exp_send -s "0\r"}
    "(RET=\*): "    { exp_send -s "\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"}
    -gl "timeout" {
	expect *
	error "Timed out" \
	    "Expected: $expstring. Saw: $expect_out(buffer)"
    }
}


foreach cmd $debugcmds {
    dialog "$prompt" "$cmd"
    dialog "$debugprompt" "0x0"
}

dialog "$prompt" "upload_cfg"
dialog "\[IP:FILENAME\*" "$G_EXPECT_CFG_TFTPADDR:$conf_path_filename"
dialog "Set configuration from file?  (RET=\*): " "y"
dialog "Save configuration to FLASH memory?  (RET=\*): " "y"

sleep 5;

expect "$prompt"
send -- "\r"


dialog "$prompt" "reboot"

sleep 20

set tpid [exp_pid -i $spawn_id]
exec kill -9 $tpid

expect eof
